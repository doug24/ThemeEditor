<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="ThemedCheckbox" TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" 
                                Margin="1"
                                Background="{DynamicResource Check.Static.Background}" 
                                BorderBrush="{DynamicResource Check.Static.Border}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark" Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z" 
                                      Fill="{DynamicResource Check.Static.OptionMark}" Margin="1" Opacity="0" Stretch="None"/>
                                <Rectangle x:Name="indeterminateMark" Fill="{DynamicResource Check.Static.OptionMark}" Margin="2" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{DynamicResource Check.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource Check.MouseOver.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource Check.Static.OptionMark}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{DynamicResource Check.Static.OptionMark}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{DynamicResource Check.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource Check.Disabled.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource Check.Disabled.OptionMark}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{DynamicResource Check.Disabled.OptionMark}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{DynamicResource Check.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource Check.Pressed.Background}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource Check.Static.OptionMark}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{DynamicResource Check.Static.OptionMark}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{DynamicResource Check.Checked.Background}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{DynamicResource Check.Checked.Background}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource ThemedCheckbox}" TargetType="{x:Type CheckBox}" />

    <ControlTemplate x:Key="FavsMetroButtonTemplate" TargetType="{x:Type CheckBox}">
        <DockPanel Background="Transparent">
            <Path DockPanel.Dock="Left" StrokeThickness="1" StrokeLineJoin="Round" Stroke="#FF3E3E3E" Fill="{TemplateBinding Background}" 
                  Data="F1 M 12.5926,4.87357L 10.8135,10.5588L 5.02215,10.5473L 9.71401,14.0495L 7.9138,19.7276L 12.5926,16.2069L 17.2714,19.7276L 15.4711,14.0495L 20.163,10.5473L 14.3716,10.5588L 12.5926,4.87357 Z " 
                  Stretch="Uniform" Height="22" Margin="2"/>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              VerticalAlignment="Center"
                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="LightGray" ShadowDepth="0" Opacity="1" BlurRadius="14"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="#FFF9E61E"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


</ResourceDictionary>